apiVersion: v1
kind: ConfigMap
metadata:
  name: esawitku-config
  namespace: esawitku
data:
  # Application Configuration
  NODE_ENV: "production"
  APP_NAME: "eSawitKu"
  APP_VERSION: "1.0.0"
  
  # Database Configuration
  DATABASE_URL: "postgresql://esawitku:password@postgres-service:5432/esawitku"
  REDIS_URL: "redis://redis-service:6379"
  MONGODB_URL: "mongodb://mongodb-service:27017/esawitku"
  MYSQL_HOST: "mysql-service"
  MYSQL_PORT: "3306"
  MYSQL_USER: "esawitku"
  MYSQL_PASSWORD: "password"
  MYSQL_DATABASE: "esawitku"
  
  # Cache Configuration
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "1000"
  
  # Rate Limiting
  RATE_LIMIT_WINDOW_MS: "900000"
  RATE_LIMIT_MAX_REQUESTS: "100"
  
  # File Upload
  MAX_FILE_SIZE: "10485760"
  UPLOAD_DIR: "/app/uploads"
  
  # Monitoring
  LOG_LEVEL: "info"
  METRICS_ENABLED: "true"
  
---
apiVersion: v1
kind: Secret
metadata:
  name: esawitku-secrets
  namespace: esawitku
type: Opaque
data:
  # Base64 encoded secrets
  NEXTAUTH_SECRET: ZXNhd2l0a3Utc3VwZXItc2VjcmV0LWtleS0yMDI0LXZlcnktbG9uZy1hbmQtc2VjdXJl
  JWT_SECRET: ZXNhd2l0a3Utand0LXNlY3JldC0yMDI0
  ENCRYPTION_KEY: ZXNhd2l0a3UtMzItY2hhcmFjdGVyLWVuY3J5cHRpb24ta2V5LTIwMjQ=
  
  # OAuth Secrets
  GOOGLE_CLIENT_SECRET: eW91ci1nb29nbGUtY2xpZW50LXNlY3JldA==
  GITHUB_SECRET: eW91ci1naXRodWItc2VjcmV0
  FACEBOOK_CLIENT_SECRET: eW91ci1mYWNlYm9vay1jbGllbnQtc2VjcmV0
  
  # Database Passwords
  POSTGRES_PASSWORD: cGFzc3dvcmQ=
  REDIS_PASSWORD: cmVkaXNwYXNzd29yZA==
  MONGODB_PASSWORD: cGFzc3dvcmQ=
  MYSQL_PASSWORD: cGFzc3dvcmQ=
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: esawitku-app
  namespace: esawitku
  labels:
    app: esawitku-app
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: esawitku-app
  template:
    metadata:
      labels:
        app: esawitku-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: esawitku-app
        image: esawitku-saas:latest
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: esawitku-config
              key: NODE_ENV
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: esawitku-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: esawitku-config
              key: REDIS_URL
        - name: MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: esawitku-config
              key: MONGODB_URL
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: esawitku-secrets
              key: NEXTAUTH_SECRET
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: esawitku-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
        - name: backups
          mountPath: /app/backups
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: esawitku-uploads-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: esawitku-logs-pvc
      - name: backups
        persistentVolumeClaim:
          claimName: esawitku-backups-pvc
      imagePullSecrets:
      - name: registry-secret
      
---
apiVersion: v1
kind: Service
metadata:
  name: esawitku-app-service
  namespace: esawitku
  labels:
    app: esawitku-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: esawitku-app
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
      
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: esawitku-app-hpa
  namespace: esawitku
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: esawitku-app
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
      
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: esawitku-app-pdb
  namespace: esawitku
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: esawitku-app
      
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: esawitku-network-policy
  namespace: esawitku
spec:
  podSelector:
    matchLabels:
      app: esawitku-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: mongodb
    ports:
    - protocol: TCP
      port: 27017
  - to:
    - podSelector:
        matchLabels:
          app: mysql
    ports:
    - protocol: TCP
      port: 3306
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
      
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: esawitku-uploads-pvc
  namespace: esawitku
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd
  volumeMode: Filesystem
  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: esawitku-logs-pvc
  namespace: esawitku
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
  volumeMode: Filesystem
  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: esawitku-backups-pvc
  namespace: esawitku
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard
  volumeMode: Filesystem
  
---
apiVersion: v1
kind: Namespace
metadata:
  name: esawitku
  labels:
    name: esawitku
    environment: production
